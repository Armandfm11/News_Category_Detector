Proiect_TIA_120425
    ~45 epochs ideal
    acc.        = ?
    test acc.   = ?

    model = Sequential([
    Dense(128, activation='relu', kernel_regularizer=l2(0.01),  input_shape=(X_train.shape[1],)), 
    Dense(64, activation='relu'), 
    Dense(y_train_categorical.shape[1], activation='softmax')
    ])

    # Compilare model
    model.compile(optimizer='adam', loss='categorical_crossentropy', metrics=['accuracy', 'precision', 'recall', 'auc'])

Proiect_TIA 170425
    Optimal 32 epochs
    acc.        = 0.58
    test acc.   = 0.53


    model = Sequential([
    Dense(256, activation='relu', kernel_regularizer=l2(0.01), input_shape=(X_train.shape[1],)),
    Dense(128, activation='relu'), 
    Dense(64, activation='relu'),
    Dense(32, activation='relu'),
    Dropout(0.5), 
    Dense(y_train_categorical.shape[1], activation='softmax')
])

# Compilare model
model.compile(optimizer='adam', loss='categorical_crossentropy', metrics=['accuracy', 'precision', 'recall', 'auc'])